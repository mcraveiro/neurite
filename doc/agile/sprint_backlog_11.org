#+title: Sprint Backlog 11
#+options: date:nil toc:nil author:nil num:nil
#+todo: STARTED | COMPLETED CANCELLED POSTPONED
#+tags: { story(s) spike(p) }

* Mission

- Generate all required transformations on CSG model.

* Stories

** Active

#+begin: clocktable :maxlevel 3 :scope subtree :indent nil :emphasize nil :scope file :narrow 75 :formula %
#+CAPTION: Clock summary at [2016-09-12 Mon 14:02]
| <75>                                                                        |         |       |       |       |
| Headline                                                                    | Time    |       |       |     % |
|-----------------------------------------------------------------------------+---------+-------+-------+-------|
| *Total time*                                                                | *20:50* |       |       | 100.0 |
|-----------------------------------------------------------------------------+---------+-------+-------+-------|
| Stories                                                                     | 20:50   |       |       | 100.0 |
| Active                                                                      |         | 20:50 |       | 100.0 |
| COMPLETED Journal club and lectures                                         |         |       |  2:00 |   9.6 |
| COMPLETED Socialising                                                       |         |       |  1:48 |   8.6 |
| COMPLETED Read the btmorph paper                                            |         |       |  0:29 |   2.3 |
| COMPLETED Help with experiments                                             |         |       |  0:30 |   2.4 |
| POSTPONED Compute the rotation angles                                       |         |       |  0:15 |   1.2 |
| COMPLETED Coding the Matrix chapter 1                                       |         |       | 15:48 |  75.8 |
#+TBLFM: $5='(org-clock-time% @3$2 $2..$4);%.1f
#+end:

*** COMPLETED Sprint and product backlog grooming                     :story:
    CLOSED: [2016-09-12 Mon 14:02]

Updates to sprint and product backlog.

*** COMPLETED Journal club and lectures                               :story:
    CLOSED: [2016-09-12 Mon 14:01]
    CLOCK: [2016-09-09 Fri 16:00]--[2016-09-09 Fri 17:00] =>  1:00
    CLOCK: [2016-09-09 Fri 14:00]--[2016-09-09 Fri 15:00] =>  1:00

Time spent in generic tasks.

- sorting out supervision.

*** COMPLETED Socialising                                             :story:
    CLOSED: [2016-09-12 Mon 14:01]
    CLOCK: [2016-09-09 Fri 17:00]--[2016-09-09 Fri 18:00] =>  1:00
    CLOCK: [2016-07-05 Tue 17:01]--[2016-07-05 Tue 17:49] =>  0:48

Any events during work hours not directly connected to work.

*** COMPLETED Read the btmorph paper                                  :story:
    CLOSED: [2016-07-18 Mon 15:18]
    CLOCK: [2016-07-18 Mon 14:01]--[2016-07-18 Mon 14:30] =>  0:29

[[http://btmorph.readthedocs.io/en/latest/][btmorph]] is already doing a lot the processing of SWC. We should look
at the paper: [[http://www.ncbi.nlm.nih.gov/pubmed/24924300][An efficient and extendable Python library to analyze
neuronal morphologies]].

See also [[http://btmorph.readthedocs.io/en/latest/validation.html#comparison-with-l-measure][Comparison with l-measure]].

The main take-away from the paper and [[https://bitbucket.org/btorb/btmorph][the source code]] is that btmorph
is using a dictionary to store the SWC file, making it easier to build
the graphs for visualisation (i.e. build all truncated cones
separately by looking at child and parent and then join them together
into a diagram). In addition, btmorph only accepts 3-point somas and
then drops the soma when rendering:

:        for index in SWC.keys():
:            if index < 3:
:                continue

***

*** COMPLETED Help with experiments                                   :story:
    CLOSED: [2016-09-07 Wed 16:26]
    CLOCK: [2016-09-07 Wed 14:00]--[2016-09-07 Wed 14:30] =>  0:30

Helping colleagues with experiments.
*** POSTPONED Compute the rotation angles                             :story:
    CLOSED: [2016-09-12 Mon 14:01]
    CLOCK: [2016-07-22 Fri 14:30]--[2016-07-22 Fri 14:45] =>  0:15

We need to figure out the correct incantation to compute the rotation
angle.

*** COMPLETED Coding the Matrix chapter 1                             :story:
    CLOSED: [2016-09-12 Mon 14:01]
    CLOCK: [2016-09-09 Fri 15:10]--[2016-09-09 Fri 16:00] =>  0:50
    CLOCK: [2016-09-09 Fri 13:10]--[2016-09-09 Fri 14:00] =>  0:50
    CLOCK: [2016-09-08 Thu 13:10]--[2016-09-08 Thu 17:00] =>  3:50
    CLOCK: [2016-09-07 Wed 16:27]--[2016-09-07 Wed 17:00] =>  0:33
    CLOCK: [2016-09-07 Wed 14:30]--[2016-09-07 Wed 16:26] =>  1:56
    CLOCK: [2016-09-06 Tue 13:10]--[2016-09-06 Tue 17:00] =>  3:50
    CLOCK: [2016-09-05 Mon 14:02]--[2016-09-05 Mon 18:01] =>  3:59

We need to get up to speed with Linear Algebra. Do a few chapters of
Coding the Matrix.

cd /home/marco/Development/phd/neurite/build/output/gcc-5/ && CMAKE_INCLUDE_PATH=/home/marco/Development/local/include CMAKE_LIBRARY_PATH=/home/marco/Development/local/lib CMAKE_PROGRAM_PATH=/home/marco/Development/DomainDrivenConsulting/dogen/build/output/gcc-5/stage/bin cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ../../.. -G Ninja && ninja -j5 && /home/marco/Development/phd/neurite/build/output/gcc-5/stage/bin/neurite.scader -s /home/marco/Development/phd/neurite/test_data/swc/ball_and_stick.swc -d /home/marco/Development/phd/neurite/build/output/gcc-5/stage/bin/crap2.scad

** Deprecated
