#+title: Sprint Backlog 04
#+options: date:nil toc:nil author:nil num:nil
#+todo: STARTED | COMPLETED CANCELLED POSTPONED
#+tags: { story(s) spike(p) }

* Mission

- Add basic SWC support.
- Create a mesh wit CGAL

* Stories

** Active

#+begin: clocktable :maxlevel 3 :scope subtree :indent nil :emphasize nil :scope file :narrow 75
#+CAPTION: Clock summary at [2016-01-04 Mon 17:19]
| <75>                                                                        |         |       |      |
| Headline                                                                    | Time    |       |      |
|-----------------------------------------------------------------------------+---------+-------+------|
| *Total time*                                                                | *11:00* |       |      |
|-----------------------------------------------------------------------------+---------+-------+------|
| Stories                                                                     | 11:00   |       |      |
| Active                                                                      |         | 11:00 |      |
| STARTED Sprint and product backlog grooming                                 |         |       | 0:31 |
| COMPLETED Implement basic SWC support                                       |         |       | 5:40 |
| POSTPONED Create a VTK setup from github                                    |         |       | 3:40 |
| POSTPONED Parse btmorph's source                                            |         |       | 0:22 |
| POSTPONED Create a blog post on SWC                                         |         |       | 0:47 |
#+end:

*** STARTED Sprint and product backlog grooming                       :story:
    CLOCK: [2015-12-04 Fri 13:55]--[2015-12-04 Fri 14:26] =>  0:31

Updates to sprint and product backlog.

*** COMPLETED Implement basic SWC support                             :story:
    CLOSED: [2015-12-08 Tue 16:57]

We need to add code to read and write SWC files, with tests sourced
from
[[http://neuromorpho.org/neuroMorpho/index.jsp][NeuroMorpho.Org]].

- [[http://www.neuronland.org/NLMorphologyConverter/MorphologyFormats/SWC/Spec.html][SWC Format specification]]
- [[http://neuromorpho.org/neuroMorpho/dableFiles/guerra%2520da%2520rocha/CNG%2520version/cc08lamx4cel01pp-sb.CNG.swc][Example SWC file]]
- [[http://research.mssm.edu/cnic/tools-ns.html][NeuronStudio]] has an implementation in C.
- [[https://github.com/meawoppl/reconstruct-1101][Reconstruct]]: generates 3D representations from stacks. Paper:
  [[http://synapses.clm.utexas.edu/pubs/2005jmi_1466.pdf][Reconstruct:
  a free editor for serial section microscopy]]
- [[http://neuron.duke.edu/cells/index/topindex.html][SWC data from Duke]]

**** COMPLETED Read the original Cannon paper
     CLOSED: [2015-12-08 Tue 16:57]

- quick parse of the paper to get a better understanding of the format.
- paper: [[http://ac.els-cdn.com/S0165027098000910/1-s2.0-S0165027098000910-main.pdf?_tid%3D06345944-767a-11e5-97c1-00000aab0f27&acdnat%3D1445270396_0f399ab6e23d392fd78e161582ad1c24][An on-line archive of reconstructed hippocampal neurons]]

Notes:

- still not clear what SWC stands for or its origins.
- there should only be one point with an index of -1, indicating it is
  the root point (generally part of the soma). Question: aren't there
  multiple points off of the soma?  e.g. axon, "first degree"
  dendrites?
- all points must have one and only one parent.
- parents should have a lower index than the child. This avoids loops
  and unconnected branches.
- cells are reduced to a collection of cylinders. For each we have 2
  points and a radius. The interconnections between cylinders are also
  mentioned in the file.
- user defined payload for additional meta-data during the
  reconstruction process, on a per-point basis.
- electrophysiological data can also be included, but there is no
  standardisation for it. It is supplied as a set of external links to
  files. Also contains a link to the raw data, presumably the
  microscopy image stack.
- other file formats to research: [[https://code.google.com/p/ontomorphtab/source/browse/trunk/OntoMorph2/etc/neurolucida-xml/neurolucida-xml.xsd?r%3D335][neurolucida XML]], ASC. Notes on this:
  The Neurolucida file format is used by MicroBrightField products to
  store information on neuronal reconstructions. Both binary and ASCII
  format files can be generated by these products, and at this time
  neuroConstruct can import ASCII (*.asc) format V3 files (a
  heirarchical file structure with "CellBody", "Dendrite", etc). The
  format allows recording of various anatomical features, not only
  neuronal processes such as dendrites and cell bodies, but can record
  other microanatomical features of potential interest to
  anatomists. Not all of these features will be relevant when
  constructing a single cell computational model. See
  [[http://www.neuroconstruct.org/docs/import.html][this page]].
- list of commonly used file formats: [[http://neuronland.org/NLMorphologyConverter/FormatStatus.html][Supported Formats and Current
  Status]]. We should keep an eye on
  [[http://neuronland.org/NLMorphologyConverter/NLMorphologyConverter.html][NLMorphologyConverter]].
- structure editor detects missing connectivity, unconnected branches,

**** COMPLETED Create a simple parser for the SWC file format
     CLOSED: [2015-12-08 Tue 16:57]
     CLOCK: [2015-12-08 Tue 15:50]--[2015-12-08 Tue 16:30] =>  0:40
     CLOCK: [2015-12-07 Mon 16:01]--[2015-12-07 Mon 17:29] =>  1:28
     CLOCK: [2015-12-07 Mon 13:43]--[2015-12-07 Mon 15:54] =>  2:11
     CLOCK: [2015-12-04 Fri 14:49]--[2015-12-04 Fri 15:49] =>  1:00
     CLOCK: [2015-12-04 Fri 14:27]--[2015-12-04 Fri 14:48] =>  0:21

- add a few basic tests, but not too many: valid file, invalid file.

*** POSTPONED Create a VTK setup from github                          :story:
    CLOSED: [2016-01-04 Mon 17:18]
    CLOCK: [2015-12-09 Wed 16:53]--[2015-12-09 Wed 17:51] =>  0:58
    CLOCK: [2015-12-09 Wed 14:50]--[2015-12-09 Wed 15:41] =>  0:51
    CLOCK: [2015-12-08 Tue 16:31]--[2015-12-08 Tue 18:22] =>  1:51

It seems the debian packages are a bit outdated. Build from source.

- [[http://www.vtk.org/Wiki/VTK/Building/Linux][VTK/Building/Linux]]
- [[http://www.vtk.org/Wiki/VTK/Tutorials/QtSetup][VTK/Tutorials/QtSetup]]
- [[https://www.youtube.com/watch?v%3Dsb5FTVGqhPo][Building Qt-enabled VTK applications]]
- [[http://mitk.org/wiki/MITK][The Medical Imaging Interaction Toolkit (MITK)]]
- [[http://docs.mitk.org/2015.05/Architecture.html][MITK Artchitecture]]
- [[http://www.commontk.org/index.php/Main_Page][CTK - The Common Toolkit]]

: sudo apt-get install qtbase5-dev qttools5-dev
: git clone git@github.com:Kitware/VTK.git
: cd VTK
: mkdir build
: cd build
: CMAKE_INCLUDE_PATH=/usr/local/personal/include CMAKE_LIBRARY_PATH=/usr/local/personal/lib cmake -DCMAKE_INSTALL_PREFIX=/home/marco/Development/phd/local -DVTK_QT_VERSION:STRING=5 -DVTK_Group_Qt:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -G Ninja ..
: cd ~/Development/phd/neurite/build/output/gcc-5/ && CMAKE_INCLUDE_PATH=/usr/local/personal/include:/home/marco/Development/phd/local/include CMAKE_LIBRARY_PATH=/usr/local/personal/lib:/home/marco/Development/phd/local/lib CC=gcc-5 CXX=g++-5 CMAKE_PROGRAM_PATH=/home/marco/Development/DomainDrivenConsulting/dogen/build/output/gcc-5/stage/bin VTK_DIR=/home/marco/Development/phd/local/lib/cmake/vtk-6.3/ cmake -DVERBOSE=1 -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ../../../ -G Ninja && ninja -j2 soma
: cmake -DVTK_QT_VERSION:STRING=5 -DVTK_Group_Qt:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -G Ninja ..

*** POSTPONED Parse btmorph's source                                  :story:
    CLOSED: [2016-01-04 Mon 17:19]
    CLOCK: [2015-12-09 Wed 16:44]--[2015-12-09 Wed 16:53] =>  0:09
    CLOCK: [2015-12-09 Wed 15:42]--[2015-12-09 Wed 15:55] =>  0:13

We need to understand how btmorph is able to visualise SWC
files. First get it to work, then parse the source.

: apt-get install python-matplotlib python-numpy python-scipy
: git clone https://bitbucket.org/btorb/btmorph.git
: cd btmorph/btmorph
: export PYTHONPATH=$(pwd):$PYTHONPATH
: import btmorph
: import numpy
: import matplotlib.pyplot as plt
: btmorph.plot_2D_SWC("neurite/test_data/swc/ball_and_stick.swc")

*** POSTPONED Create a blog post on SWC                               :story:
    CLOSED: [2016-01-04 Mon 17:19]
    CLOCK: [2015-12-09 Wed 15:56]--[2015-12-09 Wed 16:43] =>  0:47

- describe format
- describe the reconstruction and generative processes
