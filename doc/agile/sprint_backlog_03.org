#+title: Sprint Backlog 03
#+options: date:nil toc:nil author:nil num:nil
#+todo: STARTED | COMPLETED CANCELLED POSTPONED
#+tags: { story(s) spike(p) }

* Mission

- Add basic SWC support.
- Create a mesh wit CGAL

* Stories

** Active

#+begin: clocktable :maxlevel 3 :scope subtree :indent nil :emphasize nil :scope file :narrow 75
#+CAPTION: Clock summary at [2015-11-11 Wed 18:02]
| <75>                                                                        |        |      |      |
| Headline                                                                    | Time   |      |      |
|-----------------------------------------------------------------------------+--------+------+------|
| *Total time*                                                                | *3:23* |      |      |
|-----------------------------------------------------------------------------+--------+------+------|
| Stories                                                                     | 3:23   |      |      |
| Active                                                                      |        | 3:23 |      |
| STARTED Sprint and product backlog grooming                                 |        |      | 0:03 |
| COMPLETED Create a blog post discussing NEURON file formats                 |        |      | 3:20 |
#+end:

*** Journal club and other activities                                 :story:

Time spent in generic tasks.

*** STARTED Sprint and product backlog grooming                       :story:
    CLOCK: [2015-11-10 Tue 17:58]--[2015-11-10 Tue 18:01] =>  0:03

Updates to sprint and product backlog.

*** COMPLETED Create a blog post discussing NEURON file formats       :story:
    CLOSED: [2015-11-11 Wed 18:01]
    CLOCK: [2015-11-11 Wed 14:41]--[2015-11-11 Wed 18:01] =>  3:20

We need a simple post talking about all the file formats we know
of. Actually for this sprint we need to narrow it down to just a
couple.

*** STARTED Implement basic SWC support                               :story:

We need to add code to read and write SWC files, with tests sourced
from [[http://neuromorpho.org/neuroMorpho/index.jsp][NeuroMorpho.Org]].

- [[http://www.neuronland.org/NLMorphologyConverter/MorphologyFormats/SWC/Spec.html][SWC Format specification]]
- [[http://neuromorpho.org/neuroMorpho/dableFiles/guerra%2520da%2520rocha/CNG%2520version/cc08lamx4cel01pp-sb.CNG.swc][Example SWC file]]
- [[http://research.mssm.edu/cnic/tools-ns.html][NeuronStudio]] has an implementation in C.
- Original paper: [[http://ac.els-cdn.com/S0165027098000910/1-s2.0-S0165027098000910-main.pdf?_tid%3D06345944-767a-11e5-97c1-00000aab0f27&acdnat%3D1445270396_0f399ab6e23d392fd78e161582ad1c24][An on-line archive of reconstructed hippocampal
  neurons]] ([[http://www.sciencedirect.com/science/article/pii/S0165027098000910][HTML]])

**** Create a simple parser for the SWC file format

- add a few basic tests, but not too many: valid file, invalid file.
*** Add support for CGAL                                              :story:

We need to get a simple CGAL example to compile and run, adding all
the required infrastructure (debian packages, CMake files, etc).

*** Add support for VTK                                               :story:

We need to get a simple VTK example to compile and run, adding all
the required infrastructure (debian packages, CMake files, etc).

We should create a very simple Qt gui.

*** Add XSD tool support to neurite                                   :story:

Create a simple XSD schema and get it to code generate to C++ using
the [[http://www.codesynthesis.com/products/xsd/][XSD tool]].

*** Start a blog post talking about polygon meshes                    :story:

We don't necessarily need to finish it this sprint but we need to
start collecting all the terminology, etc in a blog post.

*** Create a very simple polygon mesh using CGAL                      :story:

Get the sample from Ben of a very simple model and using the [[http://doc.cgal.org/latest/Mesh_3/][3D Mesh
Generation]] documentation, try to generate a simple mesh.
